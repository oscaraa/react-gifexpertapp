{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","useEffect","then","imgs","setState","loading","state","useFetchGifs","GifExpertApp","categories","setCategories","idx","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAuB,IAApBC,EAAmB,EAAnBA,YAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCRlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbN,EADa,iDACkCO,UAAUF,GAD5C,+DAEKG,MAAMR,GAFX,cAEbS,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAQ,CACJhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARvB,kBAWbY,GAXa,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECAb,SAACA,GAEzBa,qBAAW,WACPd,EAAQC,GACHc,MAAK,SAAAC,GACFC,EAAS,CACLV,KAAMS,EACNE,SAAS,SAGtB,CAACjB,IAVkC,MAYZrB,mBAAS,CAC/B2B,KAAM,GACNW,SAAS,IAdyB,mBAY/BC,EAZ+B,KAYxBF,EAZwB,KAiBtC,OAAOE,EDf2BC,CAAanB,GAAjCU,EAFuB,EAE7BJ,KAAcW,EAFe,EAEfA,QAGtB,OACI,qCACI,oBAAIrB,UAAU,oCAAd,SAAmDI,IAClDiB,GAAW,mBAAGrB,UAAU,qCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEetB2B,EA5BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJC,EAFI,KAQvB,OACI,qCACI,6CACA,cAAC,EAAD,CAAa5C,YAAa4C,IAC1B,uBAEA,6BAEQD,EAAWb,KAAI,SAACR,EAAUuB,GAAX,OACX,cAAC,EAAD,CAEIvB,SAAUA,GADLA,YCjBjCwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3542aff9.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\n\n\nexport const AddCategory = ( { setCategory } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2) {\n            setCategory(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n            \n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )   \n};\n\n\n\nAddCategory.propTypes = {\n    setCategory: PropTypes.func.isRequired\n};\n","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","export const getGifs = async ( category ) => {\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=j70QuEAvtHWCgZO4hCTZza4HJnrQzrjS`;\n    const respuesta = await fetch(url);\n    const {data} = await respuesta.json();\n    const gifs = data.map(img => {\n        return  {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n   return gifs;\n}","import {GifGridItem} from './GifGridItem';\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__fadeOut\">Loading</p> }\n            <div className=\"card-grid\">\n\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    useEffect( () => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    }, [category])\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    return state;\n}","import { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n    // const handlerAdd = () => {\n    //     let prueva = [ ... categories, 'HunterXHubter'];\n    //     setCategories(prueva);\n    // }\n    return (\n        <>\n            <h2>GifExperApp</h2>\n            <AddCategory setCategory={setCategories}/>\n            <hr />\n            \n            <ol>\n                {\n                    categories.map((category, idx) => (\n                        <GifGrid \n                            key={category}\n                            category={category}/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\n\nexport default GifExpertApp;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExperApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}